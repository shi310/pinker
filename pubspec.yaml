name: pinker
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.3.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # 国际化
  flutter_localizations:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # GetX is an extra-light and powerful solution for Flutter. 
  # It combines high-performance state management, 
  # intelligent dependency injection, 
  # and route management quickly and practically.
  get: ^4.6.6

  # Wraps platform-specific persistent storage for simple data 
  # Data may be persisted to disk asynchronously, 
  # and there is no guarantee that writes will be persisted to disk after returning, 
  # so this plugin must not be used for storing critical data.
  shared_preferences: ^2.2.2

  # A powerful HTTP networking package for Dart/Flutter, 
  # supports Global configuration, Interceptors, FormData, 
  # Request cancellation, File uploading/downloading, Timeout, Custom adapters, Transformers, etc.
  dio: ^5.4.2+1

  # This Flutter plugin provides an API for querying information about an application package.
  package_info_plus: ^7.0.0

  # Get current device information from within the Flutter application.
  device_info_plus: ^10.1.0

  # A set of cryptographic hashing functions for Dart.
  crypto: ^3.0.3

  # Draw SVG files using Flutter.
  flutter_svg: ^2.0.10+1

  # Lottie is a mobile library for Android and iOS that parses Adobe After Effects 
  # animations exported as json with Bodymovin and renders them natively on mobile!
  lottie: ^3.1.0

  # Flutter library to load and cache network images. 
  # Can also be used with placeholder and error widgets
  cached_network_image: ^3.3.1

  # A Flutter plugin for iOS, Android and Web for playing back video on a Widget surface.
  video_player: ^2.8.5

  # ======================================================== not like 100%
  # The video player for Flutter with a heart of gold.
  chewie: ^1.8.1

  # Like Button is a flutter library that allows you to create a button with animation effects similar to 
  # Twitter's heart when you like something and animation effects to increase like count.
  like_button: ^2.0.5


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svg/
    - assets/lottie/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
